1
00:00:07,890 --> 00:00:10,250
which is avoiding or detecting other

2
00:00:10,250 --> 00:00:13,020
<font color="#E5E5E5">vulnerability now in this section we are</font>

3
00:00:13,020 --> 00:00:15,030
<font color="#CCCCCC">going to take a look</font><font color="#E5E5E5"> at various points</font>

4
00:00:15,030 --> 00:00:16,860
first we will<font color="#E5E5E5"> learn about buffer</font>

5
00:00:16,860 --> 00:00:18,660
overflow vulnerability<font color="#CCCCCC"> addiction then we</font>

6
00:00:18,660 --> 00:00:20,280
will learn<font color="#CCCCCC"> about denial of service and</font>

7
00:00:20,280 --> 00:00:22,500
their detection<font color="#E5E5E5"> brute-forcing attack</font>

8
00:00:22,500 --> 00:00:24,600
<font color="#E5E5E5">password forcing attack on the web</font>

9
00:00:24,600 --> 00:00:26,010
applications<font color="#E5E5E5"> and then we will learn</font>

10
00:00:26,010 --> 00:00:27,630
<font color="#CCCCCC">about</font><font color="#E5E5E5"> some more file uploads and</font>

11
00:00:27,630 --> 00:00:29,250
transferable<font color="#E5E5E5"> abilities and their</font>

12
00:00:29,250 --> 00:00:31,250
detection<font color="#E5E5E5"> buffer overflow vulnerability</font>

13
00:00:31,250 --> 00:00:33,719
<font color="#E5E5E5">detection so in this video we are going</font>

14
00:00:33,719 --> 00:00:35,700
<font color="#E5E5E5">to take a look at couple of points we</font>

15
00:00:35,700 --> 00:00:37,500
will learn<font color="#CCCCCC"> about</font><font color="#E5E5E5"> what is buffer overflow</font>

16
00:00:37,500 --> 00:00:39,780
validity and then later we will learn

17
00:00:39,780 --> 00:00:41,280
about<font color="#E5E5E5"> some detection techniques of</font>

18
00:00:41,280 --> 00:00:43,829
buffer overflow first what is buffer

19
00:00:43,829 --> 00:00:45,540
overflow one little<font color="#E5E5E5"> bit is so you can</font>

20
00:00:45,540 --> 00:00:47,400
see here<font color="#E5E5E5"> that what is buffer buffer</font>

21
00:00:47,400 --> 00:00:49,320
<font color="#E5E5E5">overflow</font><font color="#CCCCCC"> is a kind</font><font color="#E5E5E5"> of attack where</font>

22
00:00:49,320 --> 00:00:51,480
program tries to insert more data than

23
00:00:51,480 --> 00:00:54,239
memory allocated in before it means the

24
00:00:54,239 --> 00:00:56,220
<font color="#E5E5E5">memory is less but</font><font color="#CCCCCC"> you are putting more</font>

25
00:00:56,220 --> 00:00:58,410
data in the<font color="#E5E5E5"> memory so at that time</font>

26
00:00:58,410 --> 00:01:00,720
<font color="#CCCCCC">buffer overflow can happen so what it</font>

27
00:01:00,720 --> 00:01:02,880
can do it can<font color="#E5E5E5"> basically crash your</font>

28
00:01:02,880 --> 00:01:04,680
program<font color="#E5E5E5"> of corrupt your data it can wipe</font>

29
00:01:04,680 --> 00:01:07,049
<font color="#E5E5E5">out your data it can crash your data and</font>

30
00:01:07,049 --> 00:01:09,780
you are<font color="#E5E5E5"> not able to use that kind of web</font>

31
00:01:09,780 --> 00:01:12,510
application<font color="#E5E5E5"> so now we are going to learn</font>

32
00:01:12,510 --> 00:01:14,580
<font color="#E5E5E5">about buffer overflow inside</font><font color="#CCCCCC"> Metiria</font>

33
00:01:14,580 --> 00:01:17,250
<font color="#E5E5E5">Kali Linux so open</font><font color="#CCCCCC"> motilal</font><font color="#E5E5E5"> inside Kali</font>

34
00:01:17,250 --> 00:01:19,530
Linux and then we will perform<font color="#E5E5E5"> some</font>

35
00:01:19,530 --> 00:01:21,860
<font color="#E5E5E5">practical on buffer overflow techniques</font>

36
00:01:21,860 --> 00:01:24,240
so I'm here at Kali Linux operating

37
00:01:24,240 --> 00:01:26,970
system<font color="#E5E5E5"> and we need to start the mighty</font>

38
00:01:26,970 --> 00:01:29,580
<font color="#CCCCCC">leader inside the browser</font><font color="#E5E5E5"> so here this</font>

39
00:01:29,580 --> 00:01:32,190
is<font color="#CCCCCC"> over smutty lady</font><font color="#E5E5E5"> and we need to</font>

40
00:01:32,190 --> 00:01:35,310
perform buffer overflow attack in the

41
00:01:35,310 --> 00:01:36,119
blood<font color="#CCCCCC"> location</font>

42
00:01:36,119 --> 00:01:39,299
so to do that let me<font color="#E5E5E5"> find</font><font color="#CCCCCC"> out the buffer</font>

43
00:01:39,299 --> 00:01:42,810
<font color="#CCCCCC">overflow so select OS 2017</font><font color="#E5E5E5"> select</font>

44
00:01:42,810 --> 00:01:45,000
injection<font color="#E5E5E5"> other attacks and then you</font>

45
00:01:45,000 --> 00:01:47,040
will find buffer overflow and click on

46
00:01:47,040 --> 00:01:51,479
repeater so here it<font color="#E5E5E5"> is right repeater</font>

47
00:01:51,479 --> 00:01:53,340
please enter string to repeat and number

48
00:01:53,340 --> 00:01:55,500
<font color="#CCCCCC">of times Ruby before that</font><font color="#E5E5E5"> I need to</font>

49
00:01:55,500 --> 00:01:58,140
check the theory behind it<font color="#E5E5E5"> so it may</font>

50
00:01:58,140 --> 00:01:59,850
click on hints and videos and<font color="#CCCCCC"> if they</font>

51
00:01:59,850 --> 00:02:03,240
click<font color="#E5E5E5"> on buffer overflow so this is</font>

52
00:02:03,240 --> 00:02:05,759
buffer overflow right what is buffer

53
00:02:05,759 --> 00:02:08,250
overflow as I already<font color="#CCCCCC"> told you but let's</font>

54
00:02:08,250 --> 00:02:10,229
repeat it buffer overflow may occur<font color="#E5E5E5"> when</font>

55
00:02:10,229 --> 00:02:12,450
input is too large<font color="#E5E5E5"> to fit in inside the</font>

56
00:02:12,450 --> 00:02:14,549
space allocated<font color="#CCCCCC"> I already</font><font color="#E5E5E5"> told you that</font>

57
00:02:14,549 --> 00:02:16,319
<font color="#E5E5E5">space is less and you are putting more</font>

58
00:02:16,319 --> 00:02:18,480
data inside it but this<font color="#E5E5E5"> is called buffer</font>

59
00:02:18,480 --> 00:02:21,630
overflow so narrow down the<font color="#E5E5E5"> exact</font>

60
00:02:21,630 --> 00:02:23,400
length<font color="#E5E5E5"> of input that overflows of a</font>

61
00:02:23,400 --> 00:02:24,960
little<font color="#E5E5E5"> input parameter this is the</font>

62
00:02:24,960 --> 00:02:27,450
exploitation<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and this is</font><font color="#E5E5E5"> example</font>

63
00:02:27,450 --> 00:02:29,550
<font color="#CCCCCC">Peas repeater is vulnerable right</font><font color="#E5E5E5"> this</font>

64
00:02:29,550 --> 00:02:32,340
is the<font color="#E5E5E5"> paged repeater which is one label</font>

65
00:02:32,340 --> 00:02:34,920
and the time<font color="#CCCCCC"> to repeat</font><font color="#E5E5E5"> has some</font>

66
00:02:34,920 --> 00:02:36,660
production and it is<font color="#CCCCCC"> cast</font><font color="#E5E5E5"> to an integer</font>

67
00:02:36,660 --> 00:02:38,700
<font color="#CCCCCC">even if you've overflowed time to repeat</font>

68
00:02:38,700 --> 00:02:40,350
by submitting a value larger<font color="#CCCCCC"> than</font><font color="#E5E5E5"> int</font>

69
00:02:40,350 --> 00:02:42,540
the system should<font color="#E5E5E5"> cast the number the</font>

70
00:02:42,540 --> 00:02:45,240
thing is quite simple you<font color="#CCCCCC"> can insert</font><font color="#E5E5E5"> any</font>

71
00:02:45,240 --> 00:02:48,180
amount of<font color="#E5E5E5"> data</font><font color="#CCCCCC"> inside this webpage</font><font color="#E5E5E5"> right</font>

72
00:02:48,180 --> 00:02:50,250
and this<font color="#E5E5E5"> should not happen in actual web</font>

73
00:02:50,250 --> 00:02:52,290
application actual web application

74
00:02:52,290 --> 00:02:54,780
should<font color="#E5E5E5"> have limitation in the web pages</font>

75
00:02:54,780 --> 00:02:55,560
<font color="#E5E5E5">right</font>

76
00:02:55,560 --> 00:02:57,690
you cannot put more data than integer

77
00:02:57,690 --> 00:03:01,440
limit and if you are able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> insert more</font>

78
00:03:01,440 --> 00:03:03,600
data than the integer limit obviously

79
00:03:03,600 --> 00:03:06,750
<font color="#CCCCCC">this is a case of buffer overflow</font><font color="#E5E5E5"> all</font>

80
00:03:06,750 --> 00:03:09,410
<font color="#E5E5E5">right now let</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> show you how it works</font>

81
00:03:09,410 --> 00:03:12,970
<font color="#E5E5E5">so let me go back</font><font color="#CCCCCC"> to the matinee</font>

82
00:03:12,970 --> 00:03:16,620
local<font color="#E5E5E5"> Oh slash mati ledee hit enter and</font>

83
00:03:16,620 --> 00:03:19,780
here<font color="#CCCCCC"> we need to</font><font color="#E5E5E5"> select with on 17 other</font>

84
00:03:19,780 --> 00:03:23,050
buffer overflow<font color="#E5E5E5"> and repeated so here you</font>

85
00:03:23,050 --> 00:03:24,640
<font color="#E5E5E5">can see it is asking</font><font color="#CCCCCC"> that string to</font>

86
00:03:24,640 --> 00:03:26,170
repeat so we need to provide<font color="#CCCCCC"> the string</font>

87
00:03:26,170 --> 00:03:28,600
here<font color="#E5E5E5"> string means a kind of work for</font>

88
00:03:28,600 --> 00:03:32,590
example<font color="#E5E5E5"> my string is hello</font><font color="#CCCCCC"> alright and</font>

89
00:03:32,590 --> 00:03:34,980
number of<font color="#E5E5E5"> times</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> repeat so I can</font>

90
00:03:34,980 --> 00:03:37,960
repeat the<font color="#E5E5E5"> string millions of times or</font>

91
00:03:37,960 --> 00:03:39,730
billions of<font color="#E5E5E5"> times if this web</font>

92
00:03:39,730 --> 00:03:41,830
<font color="#CCCCCC">application is vulnerable to buffer</font>

93
00:03:41,830 --> 00:03:45,100
overflow attack for<font color="#E5E5E5"> example let me try</font>

94
00:03:45,100 --> 00:03:46,930
with

95
00:03:46,930 --> 00:03:51,879
20 lakh<font color="#E5E5E5"> times because this is</font><font color="#CCCCCC"> above the</font>

96
00:03:51,879 --> 00:03:54,430
integer limit<font color="#E5E5E5"> or any other limiters</font>

97
00:03:54,430 --> 00:03:58,209
right so you can click on repeat string

98
00:03:58,209 --> 00:03:59,890
and you can see here that<font color="#CCCCCC"> web</font>

99
00:03:59,890 --> 00:04:01,959
application has been<font color="#E5E5E5"> crashed</font><font color="#CCCCCC"> completely</font>

100
00:04:01,959 --> 00:04:03,819
right you can see here I am<font color="#CCCCCC"> NOT able to</font>

101
00:04:03,819 --> 00:04:06,280
see any options available<font color="#E5E5E5"> here I'm not</font>

102
00:04:06,280 --> 00:04:07,750
<font color="#E5E5E5">able</font><font color="#CCCCCC"> to do anything on this web</font>

103
00:04:07,750 --> 00:04:10,359
application<font color="#CCCCCC"> so this can</font><font color="#E5E5E5"> happen if buffer</font>

104
00:04:10,359 --> 00:04:11,769
overflow<font color="#CCCCCC"> is available in the web</font>

105
00:04:11,769 --> 00:04:14,109
application<font color="#CCCCCC"> I have repeated that string</font>

106
00:04:14,109 --> 00:04:18,548
20 lakh times<font color="#E5E5E5"> right and you can see here</font>

107
00:04:18,548 --> 00:04:21,509
<font color="#E5E5E5">that I am</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> able to open any option</font>

108
00:04:21,509 --> 00:04:23,470
which<font color="#CCCCCC"> is available in</font><font color="#E5E5E5"> the web</font>

109
00:04:23,470 --> 00:04:25,630
application<font color="#CCCCCC"> right you</font><font color="#E5E5E5"> cannot see any</font>

110
00:04:25,630 --> 00:04:29,020
button available in the<font color="#CCCCCC"> Hat part</font><font color="#E5E5E5"> right</font>

111
00:04:29,020 --> 00:04:30,820
<font color="#E5E5E5">it means the web application has</font><font color="#CCCCCC"> been</font>

112
00:04:30,820 --> 00:04:34,090
pressed completely<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> so this can</font>

113
00:04:34,090 --> 00:04:37,090
<font color="#CCCCCC">happen</font><font color="#E5E5E5"> if user tries to insert more data</font>

114
00:04:37,090 --> 00:04:40,660
than the space located<font color="#E5E5E5"> all right this is</font>

115
00:04:40,660 --> 00:04:42,430
called<font color="#E5E5E5"> buffer overflow attack on a web</font>

116
00:04:42,430 --> 00:04:43,870
application<font color="#E5E5E5"> and we have</font><font color="#CCCCCC"> successfully</font>

117
00:04:43,870 --> 00:04:46,360
attacked on a web application<font color="#CCCCCC"> and web</font>

118
00:04:46,360 --> 00:04:49,050
application is<font color="#CCCCCC"> pressed</font><font color="#E5E5E5"> now completely</font>

119
00:04:49,050 --> 00:04:53,770
<font color="#E5E5E5">all right now let me come</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> yeah</font>

120
00:04:53,770 --> 00:04:58,180
now it is<font color="#E5E5E5"> fine but at that</font><font color="#CCCCCC"> time the web</font>

121
00:04:58,180 --> 00:05:01,740
application was<font color="#E5E5E5"> pressed and that was a</font>

122
00:05:01,740 --> 00:05:04,960
problem<font color="#E5E5E5"> because of buffer overflow</font>

123
00:05:04,960 --> 00:05:08,349
attack<font color="#E5E5E5"> now you can click on reset DB to</font>

124
00:05:08,349 --> 00:05:11,560
reset your database<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so you have</font>

125
00:05:11,560 --> 00:05:13,330
<font color="#CCCCCC">learned that what is buffer overflow</font>

126
00:05:13,330 --> 00:05:15,400
attack and how it works how you<font color="#CCCCCC"> can</font>

127
00:05:15,400 --> 00:05:17,500
<font color="#E5E5E5">perform a practical on buffer overflow</font>

128
00:05:17,500 --> 00:05:19,659
<font color="#E5E5E5">inside an application</font><font color="#CCCCCC"> and how you can</font>

129
00:05:19,659 --> 00:05:22,449
crash the complete web application by

130
00:05:22,449 --> 00:05:25,419
using buffer overflow now the question

131
00:05:25,419 --> 00:05:27,310
comes here how<font color="#E5E5E5"> you can detect or avoid</font>

132
00:05:27,310 --> 00:05:29,440
this<font color="#E5E5E5"> kind of vulnerability what are the</font>

133
00:05:29,440 --> 00:05:32,229
best<font color="#CCCCCC"> practices to</font><font color="#E5E5E5"> avoid buffer overflow</font>

134
00:05:32,229 --> 00:05:34,840
so buffer overflow doesn't happen with

135
00:05:34,840 --> 00:05:36,669
every coding<font color="#E5E5E5"> length absolutely correct</font>

136
00:05:36,669 --> 00:05:39,250
<font color="#CCCCCC">because not each and every programming</font>

137
00:05:39,250 --> 00:05:40,960
<font color="#CCCCCC">language is vulnerable to buffer</font>

138
00:05:40,960 --> 00:05:43,060
overflow<font color="#CCCCCC"> some programming</font><font color="#E5E5E5"> languages are</font>

139
00:05:43,060 --> 00:05:46,000
vulnerable and some are not for example

140
00:05:46,000 --> 00:05:47,650
buffer overflow happens<font color="#E5E5E5"> in C language</font>

141
00:05:47,650 --> 00:05:49,599
<font color="#E5E5E5">absolutely correct it happens in C</font>

142
00:05:49,599 --> 00:05:51,849
language but languages like Java Python

143
00:05:51,849 --> 00:05:52,780
and dotnet

144
00:05:52,780 --> 00:05:55,240
doesn't allow this<font color="#E5E5E5"> kind of quality</font><font color="#CCCCCC"> so</font>

145
00:05:55,240 --> 00:05:57,190
these kind<font color="#E5E5E5"> of programming languages are</font>

146
00:05:57,190 --> 00:05:59,669
<font color="#E5E5E5">secure for buffer overflow that means</font>

147
00:05:59,669 --> 00:06:02,259
<font color="#E5E5E5">input validation input validation is</font>

148
00:06:02,259 --> 00:06:04,000
really important term because whatever

149
00:06:04,000 --> 00:06:05,919
<font color="#E5E5E5">user is inputting in that web</font>

150
00:06:05,919 --> 00:06:06,610
application

151
00:06:06,610 --> 00:06:09,610
first of all application should test it

152
00:06:09,610 --> 00:06:11,540
that the input is

153
00:06:11,540 --> 00:06:14,690
or<font color="#CCCCCC"> not and after that it should</font><font color="#E5E5E5"> send it</font>

154
00:06:14,690 --> 00:06:17,510
to the<font color="#CCCCCC"> lab server</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it's so input</font>

155
00:06:17,510 --> 00:06:19,670
validation is really necessary down to

156
00:06:19,670 --> 00:06:22,070
<font color="#E5E5E5">avoid buffer overflow inside web</font>

157
00:06:22,070 --> 00:06:24,830
applications<font color="#E5E5E5"> so this is all</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> buffer</font>

158
00:06:24,830 --> 00:00:00,000
overflow

